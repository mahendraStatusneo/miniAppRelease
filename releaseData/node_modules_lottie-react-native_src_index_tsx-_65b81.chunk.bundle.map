{"version":3,"file":"node_modules_lottie-react-native_src_index_tsx-_65b81.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/lottie-react-native/src/LottieView/index.tsx","webpack:///./node_modules/lottie-react-native/src/LottieView/utils.ts","webpack:///./node_modules/lottie-react-native/src/index.tsx","webpack:///./node_modules/lottie-react-native/src/specs/LottieAnimationViewNativeComponent.ts","webpack:///./node_modules/lottie-react-native/src/types.ts"],"sourcesContent":["import React from 'react';\nimport { NativeSyntheticEvent, ViewProps, processColor } from 'react-native';\n\nimport { parsePossibleSources } from './utils';\n\nimport type { LottieViewProps } from '../types';\n\nimport NativeLottieAnimationView, {\n  Commands,\n} from '../specs/LottieAnimationViewNativeComponent';\n\ntype Props = LottieViewProps & { containerProps?: ViewProps };\n\nconst defaultProps: Props = {\n  source: undefined,\n  progress: 0,\n  speed: 1,\n  loop: true,\n  autoPlay: false,\n  enableMergePathsAndroidForKitKatAndAbove: false,\n  cacheComposition: true,\n  useNativeLooping: false,\n  resizeMode: 'contain',\n  colorFilters: [],\n  textFiltersAndroid: [],\n  textFiltersIOS: [],\n};\n\nexport class LottieView extends React.PureComponent<Props, {}> {\n  static defaultProps = defaultProps;\n\n  private lottieAnimationViewRef:\n    | React.ElementRef<typeof NativeLottieAnimationView>\n    | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.play = this.play.bind(this);\n    this.reset = this.reset.bind(this);\n    this.pause = this.pause.bind(this);\n    this.resume = this.resume.bind(this);\n    this.onAnimationFinish = this.onAnimationFinish.bind(this);\n    this.captureRef = this.captureRef.bind(this);\n\n    if (props.hover != undefined && __DEV__) {\n      console.warn('lottie-react-native: hover is only supported on web');\n    }\n  }\n\n  play(startFrame?: number, endFrame?: number): void {\n    Commands.play(\n      this.lottieAnimationViewRef,\n      startFrame ?? -1,\n      endFrame ?? -1,\n    );\n  }\n\n  reset() {\n    Commands.reset(this.lottieAnimationViewRef);\n  }\n\n  pause() {\n    Commands.pause(this.lottieAnimationViewRef);\n  }\n\n  resume() {\n    Commands.resume(this.lottieAnimationViewRef);\n  }\n\n  private onAnimationFinish = (\n    evt: NativeSyntheticEvent<{ isCancelled: boolean }>,\n  ) => {\n    this.props.onAnimationFinish?.(evt.nativeEvent.isCancelled);\n  };\n\n  private onAnimationFailure = (\n    evt: NativeSyntheticEvent<{ error: string }>,\n  ) => {\n    this.props.onAnimationFailure?.(evt.nativeEvent.error);\n  };\n\n  private onAnimationLoaded = () => {\n    this.props.onAnimationLoaded?.()\n  }\n\n  private captureRef(ref: React.ElementRef<typeof NativeLottieAnimationView>) {\n    if (ref === null) {\n      return;\n    }\n\n    this.lottieAnimationViewRef = ref;\n    if (this.props.autoPlay === true) {\n      this.play();\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      style,\n      source,\n      autoPlay,\n      duration,\n      textFiltersAndroid,\n      textFiltersIOS,\n      resizeMode,\n      ...rest\n    } = this.props;\n\n    const sources = parsePossibleSources(source);\n\n    const speed =\n      duration && sources.sourceJson && (source as any).fr\n        ? Math.round(\n          (((source as any).op / (source as any).fr) * 1000) / duration,\n        )\n        : this.props.speed;\n\n    const colorFilters = this.props.colorFilters?.map((colorFilter) => ({\n      ...colorFilter,\n      color: processColor(colorFilter.color),\n    }));\n\n    return (\n      <NativeLottieAnimationView\n        ref={this.captureRef}\n        {...rest}\n        colorFilters={colorFilters}\n        textFiltersAndroid={textFiltersAndroid}\n        textFiltersIOS={textFiltersIOS}\n        speed={speed}\n        style={style}\n        onAnimationFinish={this.onAnimationFinish}\n        onAnimationFailure={this.onAnimationFailure}\n        onAnimationLoaded={this.onAnimationLoaded}\n        autoPlay={autoPlay}\n        resizeMode={resizeMode}\n        {...sources}\n      />\n    );\n  }\n}\n","import { Image } from 'react-native';\n\nfunction parsePossibleSources(source):\n  | {\n      sourceURL?: string;\n      sourceJson?: string;\n      sourceName?: string;\n      sourceDotLottieURI?: string;\n    }\n  | undefined {\n  const uri = (source as any).uri;\n\n  if (typeof source === 'string') {\n    return { sourceName: source };\n  }\n\n  if (typeof source === 'object' && !uri) {\n    return { sourceJson: JSON.stringify(source) };\n  }\n\n  if (typeof source === 'object' && uri) {\n    // uri contains .lottie extension return sourceDotLottieURI\n    if (uri.includes('.lottie')) {\n      return { sourceDotLottieURI: uri };\n    }\n\n    return { sourceURL: uri };\n  }\n\n  if (typeof source === 'number') {\n    return { sourceDotLottieURI: Image.resolveAssetSource(source).uri };\n  }\n\n  return undefined;\n}\n\nexport { parsePossibleSources };\n","import { LottieView } from './LottieView';\nexport * from './types';\nexport default LottieView;\n","import type {\n  BubblingEventHandler,\n  Int32,\n  Double,\n  Float,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport type { ProcessedColorValue, ViewProps, HostComponent } from 'react-native';\n\nexport type OnAnimationFinishEvent = Readonly<{\n  isCancelled: boolean;\n}>;\n\nexport type AnimationFailureEvent = Readonly<{\n  error: string;\n}>;\n\ntype AnimationLoadedEvent = Readonly<{}>\n\ntype ColorFilterStruct = Readonly<{\n  keypath: string;\n  color: ProcessedColorValue;\n}>;\n\ntype TextFilterIOSStruct = Readonly<{\n  keypath: string;\n  text: string;\n}>;\n\ntype TextFilterAndroidStruct = Readonly<{\n  find: string;\n  replace: string;\n}>;\n\nexport interface NativeProps extends ViewProps {\n  resizeMode?: string;\n  renderMode?: string;\n  sourceName?: string;\n  sourceJson?: string;\n  sourceURL?: string;\n  sourceDotLottieURI?: string;\n  imageAssetsFolder?: string;\n  progress?: Float;\n  speed?: Double;\n  loop?: boolean;\n  autoPlay?: boolean;\n  enableMergePathsAndroidForKitKatAndAbove?: boolean;\n  hardwareAccelerationAndroid?: boolean;\n  cacheComposition?: boolean;\n  colorFilters?: ReadonlyArray<ColorFilterStruct>;\n  // dummy that solves codegen issue when there's a ReadonlyArray<Object> without another Object prop\n  // https://github.com/reactwg/react-native-new-architecture/discussions/104\n  dummy?: Readonly<{ dummy: boolean }>;\n  textFiltersAndroid?: ReadonlyArray<TextFilterAndroidStruct>;\n  textFiltersIOS?: ReadonlyArray<TextFilterIOSStruct>;\n  onAnimationFinish?: BubblingEventHandler<\n    OnAnimationFinishEvent,\n    'onAnimationFinish'\n  >;\n  onAnimationFailure?: BubblingEventHandler<\n    AnimationFailureEvent,\n    'onAnimationFailure'\n  >;\n  onAnimationLoaded?: BubblingEventHandler<\n    AnimationLoadedEvent,\n    'onAnimationLoaded'\n  >;\n}\n\ntype LottieViewNativeComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  play: (\n    viewRef: React.ElementRef<LottieViewNativeComponentType>,\n    startFrame: Int32,\n    endFrame: Int32,\n  ) => void;\n  reset: (viewRef: React.ElementRef<LottieViewNativeComponentType>) => void;\n  pause: (viewRef: React.ElementRef<LottieViewNativeComponentType>) => void;\n  resume: (viewRef: React.ElementRef<LottieViewNativeComponentType>) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['play', 'reset', 'pause', 'resume'],\n});\n\nexport default codegenNativeComponent<NativeProps>('LottieAnimationView') as HostComponent<NativeProps>;\n","import { CSSProperties } from 'react';\nimport type { StyleProp, ViewStyle, LayoutChangeEvent } from 'react-native';\n\n/**\n * Serialized animation as generated from After Effects\n */\nexport interface AnimationObject {\n  v: string;\n  fr: number;\n  ip: number;\n  op: number;\n  w: number;\n  h: number;\n  nm?: string;\n  ddd?: number;\n  assets: any[];\n  layers: any[];\n  markers?: any[];\n}\n\ntype ColorFilter = {\n  keypath: string;\n  color: string;\n};\n\ntype TextFilterIOS = {\n  keypath: string;\n  text: string;\n};\n\ntype TextFilterAndroid = {\n  find: string;\n  replace: string;\n};\n\n/**\n * Properties of the LottieView component\n */\nexport interface LottieViewProps {\n  /**\n   * The source of animation. Can be referenced as a local asset by a string, or remotely\n   * with an object with a `uri` property, or it can be an actual JS object of an\n   * animation, obtained (for example) with something like\n   * `require('../path/to/animation.json')`\n   */\n  source: string | AnimationObject | { uri: string };\n\n  /**\n   * A number between 0 and 1, or an `Animated` number between 0 and 1. This number\n   * represents the normalized progress of the animation. If you update this prop, the\n   * animation will correspondingly update to the frame at that progress value. This\n   * prop is not required if you are using the imperative API.\n   * @platform ios, android, windows\n   */\n  progress?: number;\n\n  /**\n   * The speed the animation will progress. This only affects the imperative API. The\n   * default value is 1.\n   */\n  speed?: number;\n\n  /**\n   * The duration of the animation in ms. Takes precedence over speed when set.\n   * This only works when source is an actual JS object of an animation.\n   * @platform ios, android, windows\n   */\n  duration?: number;\n\n  /**\n   * A boolean flag indicating whether or not the animation should loop.\n   */\n  loop?: boolean;\n\n  /**\n   * Style attributes for the view, as expected in a standard `View`:\n   * http://facebook.github.io/react-native/releases/0.39/docs/view.html#style\n   *\n   * **CAVEAT: border styling is not supported.**\n   * @platform ios, android, windows\n   */\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * Style attributes for the web.\n   * @platform web\n   */\n  webStyle?: CSSProperties;\n\n  /**\n   * Determines how to resize the animated view when the frame doesn't match the raw image\n   * dimensions.\n   *\n   * Refer to https://facebook.github.io/react-native/docs/image.html#resizemode\n   */\n  resizeMode?: 'cover' | 'contain' | 'center';\n\n  /**\n   * Determines how Lottie should render\n   * Refer to LottieAnimationView#setRenderMode(RenderMode) for more information.\n   */\n  renderMode?: 'AUTOMATIC' | 'HARDWARE' | 'SOFTWARE';\n\n  /**\n   * A boolean flag indicating whether or not the animation should start automatically when\n   * mounted. This only affects the imperative API.\n   */\n  autoPlay?: boolean;\n\n  /**\n   * A callback function which will be called when animation is finished. Note that this\n   * callback will be called only when `loop` is set to false.\n   * @platform ios, android, web\n   */\n  onAnimationFinish?: (isCancelled: boolean) => void;\n\n  /**\n   * A callback function which will be called when animation is failed to load.\n   * @platform ios, android, web\n   */\n  onAnimationFailure?: (error: string) => void;\n\n  /**\n   * A callback function which will be called when animation has been loaded.\n   * @platform ios, android\n   */\n  onAnimationLoaded?: () => void;\n\n  /**\n   * A callback function which will be called when the animation loops.\n   *\n   * @platform windows, web\n   */\n  onAnimationLoop?: () => void;\n\n  /**\n   * A callback function which will be called when the view has been laid out.\n   */\n  onLayout?: (event: LayoutChangeEvent) => void;\n\n  /**\n   * An array of layers you want to override its color filter.\n   */\n  colorFilters?: Array<ColorFilter>;\n\n  /**\n   * A string to identify the component during testing.\n   */\n  testID?: string;\n\n  // Android Props\n\n  /**\n   * A boolean flag to enable merge patching.\n   * @platform android\n   */\n  enableMergePathsAndroidForKitKatAndAbove?: boolean;\n\n  /**\n   * A boolean flag indicating whether or not the animation should caching. Defaults to true.\n   * Refer to LottieAnimationView#setCacheComposition(boolean) for more information.\n   *\n   * @platform android\n   */\n  cacheComposition?: boolean;\n\n  /**\n   * An array of objects denoting text values to find and replace.\n   *\n   * @platform android\n   */\n  textFiltersAndroid?: Array<TextFilterAndroid>;\n\n  /**\n   * Relative folder inside of assets containing image files to be animated.\n   * Make sure that the images that bodymovin export are in that folder with their names unchanged (should be img_#).\n   * Refer to https://github.com/airbnb/lottie-android#image-support for more details.\n   *\n   * @platform android\n   */\n  imageAssetsFolder?: string;\n\n  /**\n   * Uses hardware acceleration to perform the animation. This should only\n   * be used for animations where your width and height are equal to the composition width\n   * and height, e.g. you are not scaling the animation.\n   *\n   * @platform android\n   */\n  hardwareAccelerationAndroid?: boolean;\n\n  // iOS Props\n\n  /**\n   * An array of objects denoting text layers by KeyPath and a new string value.\n   *\n   * @platform ios\n   */\n  textFiltersIOS?: Array<TextFilterIOS>;\n\n  // Windows Props\n\n  /**\n   * A boolean flag to enable use of platform-level looping on Windows. This improves loop smoothness,\n   * but onAnimationLoop will not fire and changing the loop prop will restart playback.\n   *\n   * @platform windows\n   */\n  useNativeLooping?: boolean;\n\n  // Web Props\n\n  /**\n   * A boolean flag to enable hover interactions. Whether to play on mouse hover. Defaults to false.\n   * @platform web\n   */\n  hover?: boolean;\n\n  /**\n   * Direction of the animation. Defaults to 1.\n   * @platform web\n   */\n  direction?: 1 | -1;\n}\n"],"names":["_react","_interopRequireDefault","require","_reactNative","_utils","_LottieAnimationViewNativeComponent","_interopRequireWildcard","_jsxRuntime","_jsxFileName","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","defaultProps","source","undefined","progress","speed","loop","autoPlay","enableMergePathsAndroidForKitKatAndAbove","cacheComposition","useNativeLooping","resizeMode","colorFilters","textFiltersAndroid","textFiltersIOS","LottieView","exports","_React$PureComponent","props","_this","_classCallCheck2","_defineProperty2","evt","onAnimationFinish","nativeEvent","isCancelled","onAnimationFailure","error","onAnimationLoaded","play","bind","reset","pause","resume","captureRef","hover","__DEV__","console","warn","_inherits2","_createClass2","key","value","startFrame","endFrame","Commands","lottieAnimationViewRef","ref","render","_this$props$colorFilt","_this$props","style","duration","rest","_objectWithoutProperties2","sources","parsePossibleSources","sourceJson","fr","Math","round","op","map","colorFilter","assign","color","processColor","jsx","React","PureComponent","uri","sourceName","JSON","stringify","includes","sourceDotLottieURI","sourceURL","Image","resolveAssetSource","_LottieView","_types","keys","forEach","_exportNames","enumerable","_default","_codegenNativeComponent","_codegenNativeCommands","codegenNativeCommands","supportedCommands","codegenNativeComponent"],"sourceRoot":""}