{"version":3,"file":"node_modules_jail-monkey_jailmonkey_js-_08d80.chunk.bundle","mappings":";;;;;;;;uFAAA,IAAAA,YAAA,CAAAC,mBAAA,kFAEA,GAAQ,CAAAC,UAAU,CAAKC,0BAAa,CAA5BD,UAAU,CAElB,GAAIA,UAAU,EAAI,IAAI,CAAEE,OAAO,CAACC,IAAI,CAAC,wHAAwH,CAAC,CAAC,IAAAC,QAAA,CAAAC,kBAAA,CAEhJ,CACbE,iBAAiB,CAAE,SAAAA,kBAAA,QAAM,CAAAP,UAAU,CAACO,iBAAiB,EAAI,EAAE,GAC3DC,YAAY,CAAE,SAAAA,aAAA,QAAM,CAAAR,UAAU,CAACQ,YAAY,EAAI,KAAK,GACpDC,6BAA6B,CAAET,UAAU,CAACU,sBAAsB,CAChEC,YAAY,CAAE,SAAAA,aAAA,QAAM,CAAAX,UAAU,CAACW,YAAY,EAAI,KAAK,GACpDC,eAAe,CAAE,SAAAA,gBAAA,QAAM,CAAAZ,UAAU,CAACY,eAAe,EAAI,KAAK,GAC1DC,SAAS,CAAE,SAAAA,UAAA,QACT,CAAAb,UAAU,CAACQ,YAAY,EAAIR,UAAU,CAACY,eAAe,EAAI,KAAK,GAChEE,mBAAmB,CAAE,SAAAA,oBAAA,QAAM,CAAAd,UAAU,CAACc,mBAAmB,EAAI,KAAK,GAClEC,cAAc,CAAE,SAAAA,eAAA,QAAM,CAAAf,UAAU,CAACe,cAAc,CAAC,CAAC,GACjDC,yBAAyB,CAAE,SAAAA,0BAAA,CAAM,CAE/B,GAAIC,qBAAQ,CAACC,EAAE,GAAK,SAAS,CAAE,MAAO,CAAAC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC,CAC5D,MAAO,CAAApB,UAAU,CAACgB,yBAAyB,CAAC,CAAC,CAC/C,CAAC,CACDK,UAAU,CAAE,SAAAA,WAAA,QAAM,CAAArB,UAAU,CAACqB,UAAU,EAAI,KAAK,EAClD,CAAC","sources":["webpack:///./node_modules/jail-monkey/jailmonkey.js"],"sourcesContent":["import { NativeModules, Platform } from \"react-native\";\n\nconst { JailMonkey } = NativeModules;\n\nif (JailMonkey == null) console.warn(\"JailMonkey is not available, check your native dependencies have linked correctly and ensure your app has been rebuilt\");\n\nexport default {\n  jailBrokenMessage: () => JailMonkey.jailBrokenMessage || \"\",\n  isJailBroken: () => JailMonkey.isJailBroken || false,\n  androidRootedDetectionMethods: JailMonkey.rootedDetectionMethods,\n  hookDetected: () => JailMonkey.hookDetected || false,\n  canMockLocation: () => JailMonkey.canMockLocation || false,\n  trustFall: () =>\n    JailMonkey.isJailBroken || JailMonkey.canMockLocation || false,\n  isOnExternalStorage: () => JailMonkey.isOnExternalStorage || false,\n  isDebuggedMode: () => JailMonkey.isDebuggedMode(),\n  isDevelopmentSettingsMode: () => {\n    // API only available on Android, return false for all other platforms.\n    if (Platform.OS !== \"android\") return Promise.resolve(false);\n    return JailMonkey.isDevelopmentSettingsMode();\n  },\n  AdbEnabled: () => JailMonkey.AdbEnabled || false,\n};\n"],"names":["_reactNative","require","JailMonkey","NativeModules","console","warn","_default","exports","default","jailBrokenMessage","isJailBroken","androidRootedDetectionMethods","rootedDetectionMethods","hookDetected","canMockLocation","trustFall","isOnExternalStorage","isDebuggedMode","isDevelopmentSettingsMode","Platform","OS","Promise","resolve","AdbEnabled"],"sourceRoot":""}