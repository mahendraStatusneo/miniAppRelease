{"version":3,"file":"node_modules_adobe_react-native-aepedge_ts_index_ts-_6e7c0.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@adobe/react-native-aepedge/ts/Edge.ts","webpack:///./node_modules/@adobe/react-native-aepedge/ts/index.ts","webpack:///./node_modules/@adobe/react-native-aepedge/ts/models/EdgeEventHandle.ts","webpack:///./node_modules/@adobe/react-native-aepedge/ts/models/ExperienceEvent.ts"],"sourcesContent":["/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { NativeModules } from 'react-native';\nimport ExperienceEvent from './models/ExperienceEvent';\nimport EdgeEventHandle from './models/EdgeEventHandle';\n\ninterface IEdge {\n  extensionVersion: () => Promise<string>;\n  sendEvent: (\n    experienceEvent: ExperienceEvent\n  ) => Promise<Array<EdgeEventHandle>>;\n  setLocationHint: (hint?: string | null) => void;\n  getLocationHint: () => Promise<string | null>;\n}\n\nconst RCTAEPEdge: IEdge = NativeModules.AEPEdge;\n\nconst Edge: IEdge = {\n  /**\n   * Returns the version of the Edge extension\n   * @return {string} Promise that resolves with the extension version\n   */\n  extensionVersion(): Promise<string> {\n    return Promise.resolve(RCTAEPEdge.extensionVersion());\n  },\n\n  /**\n   * Send an Experience Event to Adobe Experience Edge\n   *\n   * @param experienceEvent Event to be sent to Adobe Experience Edge\n   * @return Promise fulfilled when the request is complete, returning the associated\n   * response handles received from the Adobe Experience Edge or rejected\n   * if an unexpected error occured; it may return an empty array\n   * if no handles were returned for the given experienceEvent\n   */\n  sendEvent(experienceEvent: ExperienceEvent): Promise<Array<EdgeEventHandle>> {\n    const sentEventPromise = new Promise<Array<EdgeEventHandle>>(\n      (resolve, reject) => {\n        RCTAEPEdge.sendEvent(experienceEvent)\n          .then((eventHandles) => {\n            let eventHandlesPromise = toEventHandle(eventHandles);\n            resolve(eventHandlesPromise);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      }\n    );\n    return sentEventPromise;\n  },\n\n  /**\n   * Set the Edge Network location hint used in requests to the Adobe Experience Platform Edge Network.\n   * Sets the Edge Network location hint used in requests to the AEP Edge Network causing requests to \"stick\" to a specific server cluster.\n   * Passing null or an empty string will clear the existing location hint. Edge Network responses may overwrite the location hint to a new value when necessary to manage network traffic.\n   * Use caution when setting the location hint. Only use location hints for the 'EdgeNetwork' scope. An incorrect location hint value will cause all Edge Network requests to fail.\n   * @param {string?} hint the Edge Network location hint to use when connecting to the Adobe Experience Platform Edge Network\n   */\n\n  setLocationHint(hint?: string) {\n    RCTAEPEdge.setLocationHint(hint);\n  },\n\n  /**\n   * Gets the Edge Network location hint used in requests to the Adobe Experience Platform Edge Network.\n   * The Edge Network location hint may be used when building the URL for Adobe Experience Platform Edge Network\n   * requests to hint at the server cluster to use.\n   * @return the Edge Network location hint, or null if the location hint expired or is not set.\n   */\n  getLocationHint(): Promise<string|null> {\n  return RCTAEPEdge.getLocationHint();\n  }\n};\n\nfunction toEventHandle(eventArray: Array<EdgeEventHandle>) {\n  let edgeEventArray: Array<EdgeEventHandle> = [];\n\n  if (eventArray) {\n    for (let prop of eventArray) {\n      edgeEventArray.push(new EdgeEventHandle(prop.type, prop.payload));\n    }\n  }\n\n  return edgeEventArray;\n}\n\nexport default Edge;\n","/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport Edge from './Edge';\nimport EdgeEventHandle from './models/EdgeEventHandle';\nimport ExperienceEvent from './models/ExperienceEvent';\n\nexport {\n  // Native models\n  EdgeEventHandle,\n  ExperienceEvent,\n  // Native modules\n  Edge\n};\n","/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nclass EdgeEventHandle {\n  type?: string;\n  payload?: Array<Record<string, any>>;\n\n  constructor(type?: string, payload?: Array<Record<string, any>>) {\n    this.type = type;\n    this.payload = payload;\n  }\n}\n\nexport default EdgeEventHandle;\n","/*\n Copyright 2022 Adobe. All rights reserved.\n This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License. You may obtain a copy\n of the License at http://www.apache.org/licenses/LICENSE-2.0\n Unless required by applicable law or agreed to in writing, software distributed under\n the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n OF ANY KIND, either express or implied. See the License for the specific language\n governing permissions and limitations under the License.\n */\n\nconst XDM_DATA = 'xdmData';\nconst DATA = 'data';\nconst DATASET_IDENTIFIER = 'datasetIdentifier';\nconst DATASTREAM_ID_OVERRIDE = 'datastreamIdOverride';\nconst DATASTREAM_CONFIG_OVERRIDE = 'datastreamConfigOverride';\n\ntype ExperienceEventArguments =\n  | {\n      xdmData?: Record<string, any>;\n      data?: Record<string, any> | null;\n      datasetIdentifier?: string | null;\n    }\n  | {\n      xdmData?: Record<string, any>;\n      data?: Record<string, any> | null;\n      datastreamIdOverride?: string | null;\n      datastreamConfigOverride?: Record<string, any> | null;\n    };\n\nclass ExperienceEvent {\n  xdmData?: Record<string, any>;\n  data?: Record<string, any>;\n  datasetIdentifier?: string;\n  datastreamIdOverride?: string;\n  datastreamConfigOverride?: Record<string, any>;\n\n  constructor(args: ExperienceEventArguments);\n  // preserve backwards compatibility with the old constructor\n  // ExperienceEvent(xdmData, data, datasetIdentifier);\n  constructor(xdmData?: Record<string, any>, data?: Record<string, any> | null, datasetIdentifier?: string | null);\n  // setup the constructor to handle datastreamIdOverride and datastreamConfigOverride\n  // ExperienceEvent(xdmData: xdmData, data: data, datasetIdentifier: datasetIdentifier);\n  // ExperienceEvent(xdmData: xdmData, data: data, datastreamIdOverride: datastreamIdOverride);\n  // ExperienceEvent(xdmData: xdmData, data: data, datastreamConfigOverride: datastreamConfigOverride);\n  constructor(\n    argsOrXdmData?: ExperienceEventArguments | Record<string, any>,\n    data?: Record<string, any> | null,\n    datasetIdentifier?: string | null,\n  ) {\n    if (typeof argsOrXdmData === 'object' && 'xdmData' in argsOrXdmData) {\n      const args = argsOrXdmData as ExperienceEventArguments;\n      this.xdmData = args[XDM_DATA];\n      this.data = args[DATA];\n      this.datasetIdentifier = DATASET_IDENTIFIER in args ? args[DATASET_IDENTIFIER] : undefined;\n      this.datastreamIdOverride = DATASTREAM_ID_OVERRIDE in args ? args[DATASTREAM_ID_OVERRIDE] : undefined;\n      this.datastreamConfigOverride = DATASTREAM_CONFIG_OVERRIDE in args ? args[DATASTREAM_CONFIG_OVERRIDE ] : undefined;\n    } else {\n      this.xdmData = argsOrXdmData as Record<string, any>;\n      this.data = data;\n      this.datasetIdentifier = datasetIdentifier;\n    }\n  }\n}\n\nexport default ExperienceEvent;\n  "],"names":["_reactNative","require","_EdgeEventHandle","_interopRequireDefault","RCTAEPEdge","NativeModules","AEPEdge","Edge","extensionVersion","Promise","resolve","sendEvent","experienceEvent","sentEventPromise","reject","then","eventHandles","eventHandlesPromise","toEventHandle","catch","error","setLocationHint","hint","getLocationHint","eventArray","edgeEventArray","prop","push","EdgeEventHandle","type","payload","_default","exports","default","_Edge","_ExperienceEvent","_createClass2","_classCallCheck2","_defineProperty2","XDM_DATA","DATA","DATASET_IDENTIFIER","DATASTREAM_ID_OVERRIDE","DATASTREAM_CONFIG_OVERRIDE","ExperienceEvent","argsOrXdmData","data","datasetIdentifier","args","xdmData","undefined","datastreamIdOverride","datastreamConfigOverride"],"sourceRoot":""}